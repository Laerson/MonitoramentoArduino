#include <TinyGPS++.h>
TinyGPSPlus gps;


void setup()
{
  // Start the Arduino hardware serial port at 9600 baud
  Serial.begin(9600);

  // Start the software serial port at the GPS's default baud
  Serial1.begin(9600);
}

void loop()
{
  
  // Displays information when new sentence is available.
  while (Serial1.available() > 0)
    if (gps.encode(Serial1.read()))
      displayInfo();


    if(millis() > 5000 && gps.charsProcessed() < 10) {
      Serial.println("No GPS detected");
      while(true);
    }
}

void displayInfo()
{

if (gps.location.isValid())
{
Serial.print("LAT="); Serial.println(gps.location.lat(), 6); // Latitude in degrees (double)
Serial.print("LNG="); Serial.println(gps.location.lng(), 6); // Longitude in degrees (double)
Serial.print(gps.location.rawLat().negative ? "-" : "+");
Serial.println(gps.location.rawLat().deg); // Raw latitude in whole degrees
Serial.println(gps.location.rawLat().billionths);// ... and billionths (u16/u32)
Serial.print(gps.location.rawLng().negative ? "-" : "+");
Serial.println(gps.location.rawLng().deg); // Raw longitude in whole degrees
Serial.println(gps.location.rawLng().billionths);// ... and billionths (u16/u32)
Serial.print("DATA="); Serial.println(gps.date.value()); // Raw date in DDMMYY format (u32)
Serial.print("ANO="); Serial.println(gps.date.year()); // Year (2000+) (u16)
Serial.print("Mes="); Serial.println(gps.date.month()); // Month (1-12) (u8)
Serial.println(gps.date.day()); // Day (1-31) (u8)
Serial.print("Hora (UTC)="); Serial.println(gps.time.value()); // Raw time in HHMMSSCC format (u32)
Serial.print("Hora (Horario de Brasilia)="); Serial.println(gps.time.value() - 3000000); // Raw time in HHMMSSCC format (u32)
Serial.println(gps.time.hour()); // Hour (0-23) (u8)
Serial.println(gps.time.minute()); // Minute (0-59) (u8)
Serial.println(gps.time.second()); // Second (0-59) (u8)
Serial.println(gps.time.centisecond()); // 100ths of a second (0-99) (u8)
Serial.println(gps.speed.value()); // Raw speed in 100ths of a knot (i32)
Serial.println(gps.speed.knots()); // Speed in knots (double)
Serial.println(gps.speed.mph()); // Speed in miles per hour (double)
Serial.println(gps.speed.mps()); // Speed in meters per second (double)
Serial.println(gps.speed.kmph()); // Speed in kilometers per hour (double)
Serial.println(gps.course.value()); // Raw course in 100ths of a degree (i32)
Serial.println(gps.course.deg()); // Course in degrees (double)
Serial.println(gps.altitude.value()); // Raw altitude in centimeters (i32)
Serial.println(gps.altitude.meters()); // Altitude in meters (double)
Serial.println(gps.altitude.miles()); // Altitude in miles (double)
Serial.println(gps.altitude.kilometers()); // Altitude in kilometers (double)
Serial.println(gps.altitude.feet()); // Altitude in feet (double)
Serial.println(gps.satellites.value()); // Number of satellites in use (u32)
Serial.println(gps.hdop.value()); // Horizontal Dim. of Precision (100ths-i32)
}
else
{
Serial.print(F("INVALID"));
}

Serial.println();
}
